{"version":3,"sources":["helpers/ICalculationStep.ts","helpers/calendar.ts","components/Output.tsx","components/InvalidDataMessage.tsx","components/CalculationVisualisationStep.tsx","components/CalculationVisualisation.tsx","components/StateButton.tsx","helpers/Deadline.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Step","Week","Year","Output","date","className","getDate","getMonth","getFullYear","getDay","InvalidDataMessage","message","label","step","BC","BOXING","CHRISTMASS","DAY_START","END","INDEPENDENCE","KINGS","MAY1","MAY3","NMP","NOV1","NY","PW","SATURDAY","SHIFT_END","START","SUNDAY","why","type","CalculationVisualisationStep","useState","expand","changeExpand","onClick","CalculationVisualisation","steps","map","value","inx","StateButton","state","desirableState","changeState","Deadline","start","calculationSteps","this","push","Date","amount","parameters","endDate","backupDate","delta","startDate","slice","setDate","getTime","setMonth","setFullYear","isHoliday","dontShift","year","rd","re","day","dayOfWeek","month","wielkanocDay","wielkanoc","poniedzialekWielkanocny","bozeCialo","App","changeStart","changeParameters","handleTypeChange","onChange","event","val","target","valueAsDate","name","id","parseInt","min","max","checked","calculate","getSteps","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3221f2f4.chunk.js","sourcesContent":["export enum Step {\n  START,\n  DAY_START,\n  END,\n  SHIFT_END,\n  SATURDAY,\n  SUNDAY,\n  NY,\n  KINGS,\n  MAY1,\n  MAY3,\n  NMP,\n  NOV1,\n  INDEPENDENCE,\n  CHRISTMASS,\n  BOXING,\n  PW,\n  BC\n}\n\nexport interface ICalculationStep {\n  date: Date;\n  step: Step;\n}\n","export const Week: Array<string> = [\n  'niedziela',\n  'poniedziałek',\n  'wtorek',\n  'środa',\n  'czwartek',\n  'piątek',\n  'sobota',\n];\n\nexport const Year: Array<string> = [\n  'stycznia',\n  'lutego',\n  'marca',\n  'kwietnia',\n  'maja',\n  'czerwca',\n  'lipca',\n  'sierpnia',\n  'września',\n  'października',\n  'listopada',\n  'grudnia',\n];","import React from 'react';\nimport { Week, Year } from '../helpers/calendar';\n\ninterface IProps {\n  date: Date;\n}\n\nconst Output: React.FC<IProps> = ({ date }) => {\n  return (\n    <div className='flex flex-col place-items-center m-3 px-7 py-2 bg-green-100 rounded-md'>\n      <h2 className='text-green-700 text-lg font-bold' >Wynik:</h2>\n      <p className='text-green-700 text-xl'>\n        {date.getDate() +\n          ' ' +\n          Year[date.getMonth()] +\n          ' ' +\n          date.getFullYear()}\n      </p>\n      <p className='text-green-700'>{Week[date.getDay()]}</p>\n    </div>\n  );\n};\n\nexport default Output;\n","import React from 'react'\n\ninterface IProps {\n  message: string,\n}\n\nconst InvalidDataMessage:React.FC<IProps> = ({message}) => {\n  return (\n    <div className='m-2 px-7 py-2 bg-gray-100 rounded-md'>\n      <p className='text-sm text-gray-700'>{message}</p>\n    </div>\n  )\n}\n\nexport default InvalidDataMessage\n","import React, { useState } from 'react';\nimport { ICalculationStep, Step } from '../helpers/ICalculationStep';\nimport { MdExpandLess, MdExpandMore } from 'react-icons/md';\nimport { Year } from '../helpers/calendar';\n\nfunction label(step: Step): string {\n  switch (step) {\n    case Step.BC:\n      return 'Przesunięcie - dzień ustawowo wolny od pracy - Boże Ciało';\n    case Step.BOXING:\n      return 'Przesunięcie - dzień ustawowo wolny od pracy - św. Szczepana';\n    case Step.CHRISTMASS:\n      return 'Przesunięcie - dzień ustawowo wolny od pracy - Boże Narodzenie';\n    case Step.DAY_START:\n      return 'Dzień, od którego biegnie termin';\n    case Step.END:\n      return 'Ostatni dzień terminu';\n    case Step.INDEPENDENCE:\n      return 'Przesunięcie - dzień ustawowo wolny od pracy - Święto Niepodlegołości';\n    case Step.KINGS:\n      return 'Przesunięcie - dzień ustawowo wolny od pracy - 3 Króli';\n    case Step.MAY1:\n      return 'Przesunięcie - dzień ustawowo wolny od pracy - 1 Maja';\n    case Step.MAY3:\n      return 'Przesunięcie - dzień ustawowo wolny od pracy - Święto 3 Maja';\n    case Step.NMP:\n      return 'Przesunięcie - dzień ustawowo wolny od pracy - Najświętszej Marii Panny';\n    case Step.NOV1:\n      return 'Przesunięcie - dzień ustawowo wolny od pracy - Wszystkich Świętych';\n    case Step.NY:\n      return 'Przesunięcie - dzień ustawowo wolny od pracy - Nowy Rok';\n    case Step.PW:\n      return 'Przesunięcie - dzień ustawowo wolny od pracy - Poniedziałek Wielkanocny';\n    case Step.SATURDAY:\n      return 'Przesunięcie - Sobota';\n    case Step.SHIFT_END:\n      return 'Ostatni dzień terminu po przesunięciach';\n    case Step.START:\n      return 'Początek terminu';\n    case Step.SUNDAY:\n      return 'Przesunięcie - dzień ustawowo wolny od pracy - Niedziela';\n    default:\n      return 'Something went wrong';\n  }\n}\n\nfunction why(step: Step, type: string): string {\n  if (step === Step.DAY_START)\n    return 'art. 123 § 1 k.p.k. Do biegu terminu nie wlicza się dnia, od którego liczy się dany termin.';\n  else if (step === Step.END && type !== 'day')\n    return 'art. 123 § 2. Jeżeli termin jest oznaczony w tygodniach, miesiącach lub latach, koniec terminu przypada na ten dzień tygodnia lub miesiąca, który odpowiada początkowi terminu; jeżeli w danym miesiącu nie ma takiego dnia, koniec terminu przypada na ostatni dzień tego miesiąca.';\n  else\n    return 'art. 123 § 3. Jeżeli koniec terminu przypada na dzień uznany przez ustawę za dzień wolny od pracy lub na sobotę, czynność można wykonać następnego dnia, który nie jest dniem wolnym od pracy ani sobotą.';\n}\n\ninterface IProps {\n  step: ICalculationStep;\n  type: string;\n}\n\nconst CalculationVisualisationStep: React.FC<IProps> = ({ step, type }) => {\n  const [expand, changeExpand] = useState(false);\n\n  return (\n    <div className='flex flex-col my-2 p-2 bg-gray-100 rounded-md'>\n      <div className='flex justify-between items-center'>\n        <p className='mr-2 text-gray-600 text-lg font-semibold'>\n          {step.date.getDate() +\n            ' ' +\n            Year[step.date.getMonth()] +\n            ' ' +\n            step.date.getFullYear()}\n        </p>\n        <p className='flex-1 text-right text-sm'>{label(step.step)}</p>\n        {!(\n          step.step === Step.START ||\n          (step.step === Step.END && type === 'day')\n        ) && (\n          <div className='pl-1' onClick={() => changeExpand(!expand)}>\n            {expand ? <MdExpandLess /> : <MdExpandMore />}\n          </div>\n        )}\n      </div>\n      <div className={!expand ? 'hidden' : 'flex flex-col mt-2'}>\n        <p className='text-sm text-gray-600'>{'Podstawa'}</p>\n        <p>{why(step.step, type)}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default CalculationVisualisationStep;\n","import React from 'react';\nimport { ICalculationStep } from '../helpers/ICalculationStep';\nimport CalculationVisualisationStep from './CalculationVisualisationStep';\n\ninterface IProps {\n  steps: ICalculationStep[];\n  type: string;\n}\n\nconst CalculationVisualisation: React.FC<IProps> = ({ steps, type }) => {\n  return (\n    <div>\n      {steps.map((value, inx) => {\n        return <CalculationVisualisationStep key={inx} step={value} type={type}/>;\n      })}\n    </div>\n  );\n};\n\nexport default CalculationVisualisation;\n","import React from 'react';\n\ninterface IProps {\n  state: string;\n  desirableState: string;\n  label: string;\n  changeState: () => void;\n}\n\nconst StateButton: React.FC<IProps> = ({\n  state,\n  desirableState,\n  label,\n  changeState,\n}) => {\n  return (\n    <div\n      className={\n        (state === desirableState ? 'bg-blue-900' : '') + ' px-4 py-1'\n      }\n      onClick={changeState}\n    >\n      <p\n        className={(state === desirableState ? 'text-white' : 'text-blue-900') + ' font-bold'}\n      >\n        {label}\n      </p>\n    </div>\n  );\n};\n\nexport default StateButton;\n","import { ICalculationStep, Step } from './ICalculationStep';\nimport IParameters from './IParameters';\n\nexport default class Deadline {\n  private start: Date;\n  private calculationSteps: Array<ICalculationStep> = [];\n\n  constructor(start: Date) {\n    this.start = start;\n    this.calculationSteps.push({\n      date: new Date(this.start),\n      step: Step.START,\n    });\n  }\n\n  //calculate and return end date\n  calculate(amount: number, parameters: IParameters): Date {\n    let startDate = new Date(this.start);\n    let endDate: Date;\n    this.calculationSteps = this.calculationSteps.slice(0, 1);\n    let backupDate: Date;\n    let delta: number;\n\n    //calculate endDate given term type\n    switch (parameters.type) {\n      case 'day':\n        this.calculationSteps.push({\n          date: new Date(\n            new Date(this.start).setDate(this.start.getDate() + 1)\n          ),\n          step: Step.DAY_START,\n        });\n        endDate = new Date(startDate.getTime() + 1000 * 60 * 60 * 24 * amount);\n        break;\n      case 'week':\n        endDate = new Date(startDate.setDate(startDate.getDate() + amount * 7));\n        break;\n      case 'month':\n        //start date\n        backupDate = new Date(startDate);\n        endDate = new Date(startDate.setMonth(startDate.getMonth() + amount));\n        //last day of month\n        delta = endDate.getDate() - backupDate.getDate();\n        while (delta < -3) {\n          endDate = new Date(endDate.getTime() - 1000 * 60 * 60 * 24);\n          delta = endDate.getDate() - backupDate.getDate();\n        }\n        break;\n      case 'year':\n        //start date\n        backupDate = new Date(startDate);\n        endDate = new Date(\n          startDate.setFullYear(startDate.getFullYear() + amount)\n        );\n        //last day of month\n        delta = endDate.getDate() - backupDate.getDate();\n        while (delta < -1) {\n          endDate = new Date(endDate.getTime() - 1000 * 60 * 60 * 24);\n          delta = endDate.getDate() - backupDate.getDate();\n        }\n        break;\n      //radio must be unchecked - imposible?\n      default:\n        return startDate;\n    }\n    //add last day of term\n    this.calculationSteps.push({\n      date: endDate,\n      step: Step.END,\n    });\n\n    //check if holiday shifts are needed\n    let isHoliday: boolean | Step = this.isHoliday(endDate);\n\n    if (isHoliday) {\n      //shift to next day if last day is non-labour day\n      while (typeof isHoliday !== 'boolean') {\n        this.calculationSteps.push({\n          date: new Date(endDate),\n          step: isHoliday,\n        });\n\n        //shift back if dontShift is enabled else shift forward\n        if (parameters.dontShift)\n          endDate = new Date(endDate.getTime() - 1000 * 60 * 60 * 24);\n        else endDate = new Date(endDate.getTime() + 1000 * 60 * 60 * 24);\n\n        //check next day\n        isHoliday = this.isHoliday(endDate);\n      }\n\n      //add day after shifts\n      this.calculationSteps.push({\n        date: endDate,\n        step: Step.SHIFT_END,\n      });\n    }\n    return endDate;\n  }\n\n  //generate wielkanoc day for desired year - Gaussian method\n  private wielkanoc(year: number): Date {\n    let a = 24;\n    let b = 5;\n    const ra = year % 19;\n    const rb = year % 4;\n    const rc = year % 7;\n    const rd = (ra * 19 + a) % 30;\n    const re = (2 * rb + 4 * rc + 6 * rd + b) % 7;\n    if (rd + re < 10) return new Date(year, 2, rd + re + 22);\n    else return new Date(year, 3, rd + re - 9);\n  }\n\n  //check if chosen day is holiday\n  private isHoliday(date: Date): boolean | Step {\n    const day = date.getDate();\n    const dayOfWeek = date.getDay();\n    const month = date.getMonth();\n    //saturday, sunday -> zeslanie Ducha Swietego check redundant\n    if (dayOfWeek === 0) {\n      return Step.SUNDAY;\n    }\n    if (dayOfWeek === 6) {\n      return Step.SATURDAY;\n    }\n    switch (month) {\n      case 0: //styczen\n        //nowy rok, trzech kroli\n        if (day === 1) {\n          return Step.NY;\n        }\n        if (day === 6) {\n          return Step.KINGS;\n        }\n        break;\n      case 4: //maj\n        //majowka\n        if (day === 1) {\n          return Step.MAY1;\n        }\n        if (day === 3) {\n          return Step.MAY3;\n        }\n        break;\n      case 7: //sierpien\n        //wnieboziecie NMP\n        if (day === 15) {\n          return Step.NMP;\n        }\n        break;\n      case 10: //listopad\n        //wszystkich swietych, swieto niepodleglosci\n        if (day === 1) {\n          return Step.NOV1;\n        }\n        if (day === 11) {\n          return Step.INDEPENDENCE;\n        }\n        break;\n      case 11: //grudzien\n        //Boze narodzenie, sw. Szczepana\n        if (day === 25) {\n          return Step.CHRISTMASS;\n        }\n        if (day === 26) {\n          return Step.BOXING;\n        }\n        break;\n    }\n    //caculate wielkanoc for desirable year;\n    const wielkanocDay = this.wielkanoc(date.getFullYear());\n    const poniedzialekWielkanocny = new Date(\n      wielkanocDay.getTime() + 1000 * 60 * 60 * 24\n    );\n    const bozeCialo = new Date(\n      wielkanocDay.getTime() + 1000 * 60 * 60 * 24 * 60\n    );\n\n    //wielkanoc is sunday -> check redundant , poniedzialek wielkanocny, Boze Cialo\n    if (\n      day === poniedzialekWielkanocny.getDate() &&\n      month === poniedzialekWielkanocny.getMonth()\n    ) {\n      return Step.PW;\n    }\n    if (day === bozeCialo.getDate() && month === bozeCialo.getMonth()) {\n      return Step.BC;\n    }\n    return false;\n  }\n\n  getSteps() {\n    return this.calculationSteps;\n  }\n}\n","import React, { useState } from 'react';\n\nimport Output from './components/Output';\nimport InvalidDataMessage from './components/InvalidDataMessage';\nimport CalculationVisualisation from './components/CalculationVisualisation';\nimport IParameters from './helpers/IParameters';\nimport StateButton from './components/StateButton';\nimport Deadline from './helpers/Deadline';\n\nfunction App() {\n  const [start, changeStart] = useState<Deadline | null>(null);\n  const [parameters, changeParameters] = useState<IParameters>({\n    amount: 1,\n    type: 'day',\n    dontShift: false,\n  });\n\n  const handleDateChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const val = event.target.valueAsDate;\n    if (val) changeStart(new Deadline(val));\n  };\n\n  const handleTypeChange = (type: string) => {\n    changeParameters({\n      amount: parameters.amount,\n      type: type,\n      dontShift: parameters.dontShift,\n    });\n  };\n\n  return (\n    <div className='col mt-3 p-2'>\n      <h1 className='mb-4 text-4xl font-black'>Terminy</h1>\n      <div className='col'>\n        <p className='sh'>{'Wybierz datę poczatkową:'}</p>\n        <div className='mb-2'>\n          <form>\n            <input\n              className='px-2 py-1 border-2 border-blue-900 rounded-md'\n              onChange={handleDateChange}\n              type='date'\n              name='date'\n              id='date'\n            />\n          </form>\n        </div>\n      </div>\n      <div className='col'>\n        <p className='sh'>{'Ustaw parametry terminu:'}</p>\n        <div className='flex flex-row my-2 rounded-md border-2 border-blue-900'>\n          <StateButton\n            desirableState='day'\n            state={parameters.type}\n            label='Dni'\n            changeState={() => handleTypeChange('day')}\n          />\n          <StateButton\n            desirableState='week'\n            state={parameters.type}\n            label='Tygodni'\n            changeState={() => handleTypeChange('week')}\n          />\n          <StateButton\n            desirableState='month'\n            state={parameters.type}\n            label='Miesięcy'\n            changeState={() => handleTypeChange('month')}\n          />\n          <StateButton\n            desirableState='year'\n            state={parameters.type}\n            label='Lat'\n            changeState={() => handleTypeChange('year')}\n          />\n        </div>\n        <label>\n          {'Ilość:'}\n          <input\n            className='ml-2 p-1 w-12 rounded-md border-2 border-blue-900'\n            value={parameters.amount}\n            onChange={(event) =>\n              changeParameters({\n                amount: parseInt(event.target.value),\n                type: parameters.type,\n                dontShift: parameters.dontShift,\n              })\n            }\n            type='number'\n            min='1'\n            max='99'\n            name='number'\n            id='number'\n          />\n        </label>\n        <label>\n          <input\n            className='mr-1'\n            type='checkbox'\n            name='dontShift'\n            value='dontShift'\n            checked={parameters.dontShift}\n            onChange={(event) =>\n              changeParameters({\n                amount: parameters.amount,\n                type: parameters.type,\n                dontShift: event.target.checked,\n              })\n            }\n          />\n          {'Wyjątek od art. 123 par. 3'}\n        </label>\n      </div>\n      <div>\n        {start ? (\n          parameters.amount > 0 && parameters.amount < 100 ? (\n            <Output date={start.calculate(parameters.amount, parameters)} />\n          ) : (\n            <InvalidDataMessage\n              message={'Wprowadź odpowiednią długość i typ terminu'}\n            />\n          )\n        ) : (\n          <InvalidDataMessage message={'Wprowadź datę początkową'} />\n        )}\n      </div>\n      <div>\n        {start && parameters.amount > 0 && parameters.amount < 100 && (\n          <div className='col max-w-prose'>\n            <p className='sh'>{'Sposób obliczenia terminu:'}</p>\n            <CalculationVisualisation\n              steps={start.getSteps()}\n              type={parameters.type}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}